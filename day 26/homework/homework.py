#1) შექმენით ფუნქცია, რომელიც მიიღებს წინადადებას, ფუნქციამ ამ წინადადების თითოეული სიტყვა უნდა შეინახოს სიაში,
#  როგორც ცალკე ელემენტი. საბოლოოდ გადააქციეთ სია ისევ წინადადებად, სადაც სიტყვებს შორის არის მძიმე და ერთი დაშორება(", ")

def create_sentence(s):
    
    words = s.split()
    
    return ", ".join(words)


#2) შექმენით ფუნქცია, რომელიც მიიღებს წინადადებას და დაბეჭდავს მის თითოეულ სიტყვაში სიმბოლოების რაოდენობას(ცალ-ცალკე)

def word_lengths(s):
    
    words = s.split()
    
    for word in words:
        print(len(word))




#3) შექმენით ფუნქცია, რომელიც იღებს წინადადებას, სადაც ყოველი სიტყვის შორის ერთზე მეტი დაშორებაა(space).
#  თქვენი დავალებაა ჩამოაშოროთ გადმოცემულ წინადადებას ზედმეტი space-ები(სიტყვებს შორის მხოლოდ ერთი უნდა იყოს). 
# საბოლოოდ დააბრუნეთ ეს წინადადება

def remove_extra_spaces(s):
    
    words = s.split()
    
    return " ".join(words)


#4) შექმენით ფუნქცია, რომელიც იღებს წინადადებას, და მასში space-ების მაგივრად სიტყვებს შორის ჩასვამს ტირეს("-").
#  საბოლოოდ კი აბრუნებს მას

def hyphen_sentence(s):
    
    words = s.split()
    
    return "-".join(words)


#5) შექმენით ფუნქცია, რომელსაც გადაეცემა წინადადება. თქვენი დავალებაა ამ წინადადების სიტყვები შეაბრუნოთ და დააბრუნოთ
# (სიტყვების სიმბოლოები არ უნდა იყოს შებრუნებული)

#მაგალითად: "Hello World!" >>> "World! Hello"

def reverse_words(s):
    
    words = s.split()
    
    words.reverse()  
    
    return " ".join(words)

#6) გადახედეთ შემდეგ რესურსს და კომენტარებით ახსენით რას აკეთებს .capitalize() ფუნქცია:

#პასუხი:.capitalize() ფუნქცია სტრიქონის მეთოდია, რომელიც გარდაქმნის სტრიქონის პირველ სიმბოლოს დიდ ასოდ, 
         # ხოლო დანარჩენ ყველა სიმბოლოს პატარა ასოდ.




#7)გადახედეთ შემდეგ რესურსს და კომენტარებით ახსენით რას აკეთებს .title() ფუნქცია:

#პასუხი:title() ფუნქცია Python-ში სტრიქონის მეთოდია, რომელიც სიტყვების პირველ ასოებს აქცევს დიდად, 
        # ხოლო დანარჩენ ასოებს - პატარა.
